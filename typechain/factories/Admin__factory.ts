/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Admin, AdminInterface } from "../Admin";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_advisor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_hypervisor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "uint256[2]",
        name: "inMin",
        type: "uint256[2]",
      },
    ],
    name: "addBaseLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_hypervisor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "uint256[2]",
        name: "inMin",
        type: "uint256[2]",
      },
    ],
    name: "addLimitLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "advisor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_hypervisor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount0Min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Min",
        type: "uint256",
      },
    ],
    name: "pullLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "base0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "base1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_hypervisor",
        type: "address",
      },
      {
        internalType: "int24",
        name: "_baseLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "_baseUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "_limitLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "_limitUpper",
        type: "int24",
      },
      {
        internalType: "address",
        name: "_feeRecipient",
        type: "address",
      },
      {
        internalType: "uint256[4]",
        name: "inMin",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[4]",
        name: "outMin",
        type: "uint256[4]",
      },
    ],
    name: "rebalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_hypervisor",
        type: "address",
      },
    ],
    name: "removeWhitelisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "rescueERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_hypervisor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_hypervisor",
        type: "address",
      },
    ],
    name: "toggleWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "transferAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdvisor",
        type: "address",
      },
    ],
    name: "transferAdvisor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_hypervisor",
        type: "address",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferHypervisorOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f22380380610f228339818101604052604081101561003357600080fd5b5080516020909101516001600160a01b038216610097576040805162461bcd60e51b815260206004820152601960248201527f5f61646d696e2073686f756c64206265206e6f6e2d7a65726f00000000000000604482015290519081900360640190fd5b6001600160a01b0381166100f2576040805162461bcd60e51b815260206004820152601b60248201527f5f61647669736f722073686f756c64206265206e6f6e2d7a65726f0000000000604482015290519081900360640190fd5b600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055610df58061012d6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063688f87ad1161008c578063ba181ac611610066578063ba181ac614610313578063cbc3ff2014610341578063cf0789c4146103a6578063f851a4401461040b576100df565b8063688f87ad146101d857806375829def14610236578063b4e9bf881461025c576100df565b806339393ac9116100bd57806339393ac91461015e5780634fe5ca8c146101845780635d799f87146101aa576100df565b80630fdf7a4c146100e45780631936e4be14610114578063291d954914610138575b600080fd5b610112600480360360408110156100fa57600080fd5b506001600160a01b0381358116916020013516610413565b005b61011c6104ca565b604080516001600160a01b039092168252519081900360200190f35b6101126004803603602081101561014e57600080fd5b50356001600160a01b03166104d9565b6101126004803603602081101561017457600080fd5b50356001600160a01b031661057b565b6101126004803603602081101561019a57600080fd5b50356001600160a01b0316610602565b610112600480360360408110156101c057600080fd5b506001600160a01b03813581169160200135166106d8565b610210600480360360808110156101ee57600080fd5b506001600160a01b0381351690602081013590604081013590606001356108a8565b604080519485526020850193909352838301919091526060830152519081900360800190f35b6101126004803603602081101561024c57600080fd5b50356001600160a01b03166109a4565b61011260048036036101c081101561027357600080fd5b60408051608081810183526001600160a01b0385358116956020810135600290810b9695820135810b956060830135820b958584013590920b9460a084013590941693908301929161014083019160c084019060049083908390808284376000920191909152505060408051608081810190925292959493818101939250906004908390839080828437600092019190915250919450610a7a9350505050565b6101126004803603604081101561032957600080fd5b506001600160a01b0381358116916020013516610bbf565b610112600480360360a081101561035757600080fd5b6040805180820182526001600160a01b038435169360208101359383820135939082019260a083019160608401906002908390839080828437600092019190915250919450610c5a9350505050565b610112600480360360a08110156103bc57600080fd5b6040805180820182526001600160a01b038435169360208101359383820135939082019260a083019160608401906002908390839080828437600092019190915250919450610d419350505050565b61011c610dd9565b6000546001600160a01b0316331461045f576040805162461bcd60e51b815260206004820152600a60248201526937b7363c9030b236b4b760b11b604482015290519081900360640190fd5b816001600160a01b031663f2fde38b826040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156104ae57600080fd5b505af11580156104c2573d6000803e3d6000fd5b505050505050565b6001546001600160a01b031681565b6000546001600160a01b03163314610525576040805162461bcd60e51b815260206004820152600a60248201526937b7363c9030b236b4b760b11b604482015290519081900360640190fd5b806001600160a01b031663c5241e296040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561056057600080fd5b505af1158015610574573d6000803e3d6000fd5b5050505050565b6000546001600160a01b031633146105c7576040805162461bcd60e51b815260206004820152600a60248201526937b7363c9030b236b4b760b11b604482015290519081900360640190fd5b806001600160a01b0316637e15144b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561056057600080fd5b6000546001600160a01b0316331461064e576040805162461bcd60e51b815260206004820152600a60248201526937b7363c9030b236b4b760b11b604482015290519081900360640190fd5b6001600160a01b0381166106a9576040805162461bcd60e51b815260206004820152601d60248201527f6e657741647669736f722073686f756c64206265206e6f6e2d7a65726f000000604482015290519081900360640190fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610724576040805162461bcd60e51b815260206004820152600a60248201526937b7363c9030b236b4b760b11b604482015290519081900360640190fd5b6001600160a01b03811661077f576040805162461bcd60e51b815260206004820152601c60248201527f726563697069656e742073686f756c64206265206e6f6e2d7a65726f00000000604482015290519081900360640190fd5b816001600160a01b031663a9059cbb82846001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156107dc57600080fd5b505afa1580156107f0573d6000803e3d6000fd5b505050506040513d602081101561080657600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b15801561086f57600080fd5b505af1158015610883573d6000803e3d6000fd5b505050506040513d602081101561089957600080fd5b50516108a457600080fd5b5050565b6001546000908190819081906001600160a01b031633146108ff576040805162461bcd60e51b815260206004820152600c60248201526b37b7363c9030b23b34b9b7b960a11b604482015290519081900360640190fd5b876001600160a01b031663aa56e3c18888886040518463ffffffff1660e01b8152600401808481526020018381526020018281526020019350505050608060405180830381600087803b15801561095557600080fd5b505af1158015610969573d6000803e3d6000fd5b505050506040513d608081101561097f57600080fd5b50805160208201516040830151606090930151919b909a509198509650945050505050565b6000546001600160a01b031633146109f0576040805162461bcd60e51b815260206004820152600a60248201526937b7363c9030b236b4b760b11b604482015290519081900360640190fd5b6001600160a01b038116610a4b576040805162461bcd60e51b815260206004820152601b60248201527f6e657741646d696e2073686f756c64206265206e6f6e2d7a65726f0000000000604482015290519081900360640190fd5b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610ac8576040805162461bcd60e51b815260206004820152600c60248201526b37b7363c9030b23b34b9b7b960a11b604482015290519081900360640190fd5b876001600160a01b03166385919c5d888888888888886040518863ffffffff1660e01b8152600401808860020b81526020018760020b81526020018660020b81526020018560020b8152602001846001600160a01b0316815260200183600460200280838360005b83811015610b48578181015183820152602001610b30565b5050505090500182600460200280838360005b83811015610b73578181015183820152602001610b5b565b50505050905001975050505050505050600060405180830381600087803b158015610b9d57600080fd5b505af1158015610bb1573d6000803e3d6000fd5b505050505050505050505050565b6000546001600160a01b03163314610c0b576040805162461bcd60e51b815260206004820152600a60248201526937b7363c9030b236b4b760b11b604482015290519081900360640190fd5b816001600160a01b031663854cff2f826040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156104ae57600080fd5b6001546001600160a01b03163314610ca8576040805162461bcd60e51b815260206004820152600c60248201526b37b7363c9030b23b34b9b7b960a11b604482015290519081900360640190fd5b836001600160a01b03166349e8f1c28484846040518463ffffffff1660e01b81526004018084815260200183815260200182600260200280838360005b83811015610cfd578181015183820152602001610ce5565b505050509050019350505050600060405180830381600087803b158015610d2357600080fd5b505af1158015610d37573d6000803e3d6000fd5b5050505050505050565b6001546001600160a01b03163314610d8f576040805162461bcd60e51b815260206004820152600c60248201526b37b7363c9030b23b34b9b7b960a11b604482015290519081900360640190fd5b60408051632527aa1d60e01b81526004810185815260248201859052835160449092019182526001600160a01b03871692632527aa1d928792879287929083908083836020610ce5565b6000546001600160a01b03168156fea164736f6c6343000706000a";

export class Admin__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _admin: string,
    _advisor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Admin> {
    return super.deploy(_admin, _advisor, overrides || {}) as Promise<Admin>;
  }
  getDeployTransaction(
    _admin: string,
    _advisor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_admin, _advisor, overrides || {});
  }
  attach(address: string): Admin {
    return super.attach(address) as Admin;
  }
  connect(signer: Signer): Admin__factory {
    return super.connect(signer) as Admin__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdminInterface {
    return new utils.Interface(_abi) as AdminInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Admin {
    return new Contract(address, _abi, signerOrProvider) as Admin;
  }
}
